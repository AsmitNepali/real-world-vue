{"ast":null,"code":"import { vModelText as _vModelText, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = [\"disabled\"];\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"errorMessage\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => _ctx.submit && _ctx.submit(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    placeholder: \"What's your email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.email = $event),\n    class: _normalizeClass({\n      error: _ctx.v$.email.$error\n    }),\n    onBlur: _cache[1] || (_cache[1] = $event => _ctx.v$.email.$touch())\n  }, null, 34\n  /* CLASS, HYDRATE_EVENTS */\n  ), [[_vModelText, _ctx.email]]), _createElementVNode(\"button\", {\n    disabled: _ctx.v$.$invalid,\n    type: \"submit\"\n  }, \"Submit\", 8\n  /* PROPS */\n  , _hoisted_1), _ctx.v$.email.$error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_ctx.v$.email.email.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"Please Enter Valid eamil.\")) : _createCommentVNode(\"v-if\", true), _ctx.v$.email.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"Email is required.\")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)], 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":";;;;;;;EAQ8CA,KAAK,EAAC;;;;;;uBAPhDC,oBAUO,MAVP,EAUO;IAVAC,QAAM,wDAAYC,mCAAZ,EAAkB,WAAlB;EAUN,CAVP,mBACIC,oBAG0B,OAH1B,EAG0B;IAHnBC,IAAI,EAAC,OAGc;IAHNC,WAAW,EAAC,mBAGN;+DAFjBH,aAAKI,OAEY;IADzBP,KAAK;MAAAQ,OAAUL,QAAGM,KAAH,CAASC;IAAnB,EACoB;IAAzBC,MAAI,sCAAER,QAAGM,KAAH,CAASG,MAAT,EAAF;EAAqB,CAH1B;;EAAA,kBACST,eAGTC,oBAA6D,QAA7D,EAA6D;IAApDS,QAAQ,EAAEV,QAAGW,QAAuC;IAA7BT,IAAI,EAAC;EAAwB,CAA7D,EAA8C,QAA9C,EAAoD;EAAA;EAApD,EAAoDU,UAApD,GACWZ,QAAGM,KAAH,CAASC,wBAApBT,oBAGM,KAHN,EAGMe,UAHN,EAGM,CAFOb,QAAGM,KAAH,CAASA,KAAT,CAAeK,0BAAxBb,oBAAoF,GAApF,cAAuD,2BAAvD,sCAEE,EADOE,QAAGM,KAAH,CAASQ,QAAT,CAAkBH,0BAA3Bb,oBAA2D,GAA3D,EAA2DiB,UAA3D,EAAqC,oBAArC,sCACE,CAHN,uCANJ;;EAAA","names":["class","_createElementBlock","onSubmit","_ctx","_createElementVNode","type","placeholder","$event","error","email","$error","onBlur","$touch","disabled","$invalid","_hoisted_1","_hoisted_2","required","_hoisted_4"],"sourceRoot":"","sources":["/Users/asmitnepali/Documents/projects/personal/real-world-vue/src/views/ExampleView.vue"],"sourcesContent":["<template>\n    <form @submit.prevent = \"submit\">\n        <input type=\"email\" placeholder=\"What's your email\" \n        v-model=\"email\" \n        :class=\"{error: v$.email.$error}\"\n        @blur=\"v$.email.$touch()\">\n        <button :disabled=\"v$.$invalid\" type=\"submit\">Submit</button>\n        <div v-if=\"v$.email.$error\">\n            <p v-if=\"v$.email.email.$invalid\" class=\"errorMessage\">Please Enter Valid eamil.</p>\n            <p v-if=\"v$.email.required.$invalid\">Email is required.</p>\n        </div>\n    </form>\n</template>\n<script>\n    import { useVuelidate } from '@vuelidate/core'\n    import { required, email } from '@vuelidate/validators'\n    export default{\n        setup: () => ({ v$: useVuelidate() }),\n        data() {\n            return {\n                email: null,\n               \n            }\n        }, \n        validations() {\n            return {\n                email:{\n                    required,\n                    email\n                }\n            }\n        },\n        methods:{\n            submit(){\n                this.v$.$touch()\n                if() {\n                    console.log(\"Form Submitted\");\n                }\n            }\n        }\n    }\n</script>"]},"metadata":{},"sourceType":"module"}