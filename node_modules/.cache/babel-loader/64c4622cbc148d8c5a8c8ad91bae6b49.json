{"ast":null,"code":"import EventService from '@/services/EventService';\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    user: {\n      id: 'abc123',\n      name: 'Asmit Nepali'\n    },\n    categories: ['sustanability', 'nature', 'animal welfare', 'housing', 'education', 'food', 'community'],\n    events: [],\n    eventsTotal: ''\n  },\n  getters: {\n    getEventById: state => id => {\n      return state.events.filter(event => event.id === id);\n    }\n  },\n  mutations: {\n    ADD_EVENT(state, event) {\n      state.events.push(event);\n    },\n\n    SET_EVENTS(state, events) {\n      state.events = events;\n    }\n\n  },\n  actions: {\n    createEvent({\n      commit\n    }, event) {\n      return EventService.postEvent(event).then(() => {\n        commit('ADD_EVENT', event);\n      });\n    },\n\n    fetchEvents({\n      commit\n    }, {\n      perPage,\n      page\n    }) {\n      EventService.getEvents(perPage, page).then(response => {\n        commit('SET_EVENTS', response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n  },\n  modules: {}\n});","map":{"version":3,"names":["EventService","createStore","state","user","id","name","categories","events","eventsTotal","getters","getEventById","filter","event","mutations","ADD_EVENT","push","SET_EVENTS","actions","createEvent","commit","postEvent","then","fetchEvents","perPage","page","getEvents","response","data","catch","error","console","log","modules"],"sources":["/Users/asmitnepali/Documents/projects/personal/real-world-vue/src/store/index.js"],"sourcesContent":["import EventService from '@/services/EventService'\nimport { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    user:{id:'abc123', name:'Asmit Nepali'},\n    categories:[\n      'sustanability',\n      'nature',\n      'animal welfare',\n      'housing',\n      'education',\n      'food',\n      'community'\n    ],\n    events: [],\n    eventsTotal:'',\n  },\n  getters: {\n    getEventById: state => id => {\n      return state.events.filter(event=>event.id === id)\n    },\n    \n  },\n  mutations: {\n    ADD_EVENT (state,event){\n      state.events.push(event)\n    },\n    SET_EVENTS(state, events) {\n      state.events  = events\n    }\n  },\n  actions: {\n    createEvent({commit}, event) {\n      return EventService.postEvent(event).then(()=>{\n      commit('ADD_EVENT', event)\n      })\n    }, \n    fetchEvents({commit} ,{perPage, page}) {\n      EventService.getEvents(perPage, page)\n      .then(response => {\n        commit('SET_EVENTS', response.data)\n      })\n      .catch(error => {\n        console.log(error);\n      })\n    }\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,yBAAzB;AACA,SAASC,WAAT,QAA4B,MAA5B;AAEA,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,IAAI,EAAC;MAACC,EAAE,EAAC,QAAJ;MAAcC,IAAI,EAAC;IAAnB,CADA;IAELC,UAAU,EAAC,CACT,eADS,EAET,QAFS,EAGT,gBAHS,EAIT,SAJS,EAKT,WALS,EAMT,MANS,EAOT,WAPS,CAFN;IAWLC,MAAM,EAAE,EAXH;IAYLC,WAAW,EAAC;EAZP,CADkB;EAezBC,OAAO,EAAE;IACPC,YAAY,EAAER,KAAK,IAAIE,EAAE,IAAI;MAC3B,OAAOF,KAAK,CAACK,MAAN,CAAaI,MAAb,CAAoBC,KAAK,IAAEA,KAAK,CAACR,EAAN,KAAaA,EAAxC,CAAP;IACD;EAHM,CAfgB;EAqBzBS,SAAS,EAAE;IACTC,SAAS,CAAEZ,KAAF,EAAQU,KAAR,EAAc;MACrBV,KAAK,CAACK,MAAN,CAAaQ,IAAb,CAAkBH,KAAlB;IACD,CAHQ;;IAITI,UAAU,CAACd,KAAD,EAAQK,MAAR,EAAgB;MACxBL,KAAK,CAACK,MAAN,GAAgBA,MAAhB;IACD;;EANQ,CArBc;EA6BzBU,OAAO,EAAE;IACPC,WAAW,CAAC;MAACC;IAAD,CAAD,EAAWP,KAAX,EAAkB;MAC3B,OAAOZ,YAAY,CAACoB,SAAb,CAAuBR,KAAvB,EAA8BS,IAA9B,CAAmC,MAAI;QAC9CF,MAAM,CAAC,WAAD,EAAcP,KAAd,CAAN;MACC,CAFM,CAAP;IAGD,CALM;;IAMPU,WAAW,CAAC;MAACH;IAAD,CAAD,EAAW;MAACI,OAAD;MAAUC;IAAV,CAAX,EAA4B;MACrCxB,YAAY,CAACyB,SAAb,CAAuBF,OAAvB,EAAgCC,IAAhC,EACCH,IADD,CACMK,QAAQ,IAAI;QAChBP,MAAM,CAAC,YAAD,EAAeO,QAAQ,CAACC,IAAxB,CAAN;MACD,CAHD,EAICC,KAJD,CAIOC,KAAK,IAAI;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD,CAND;IAOD;;EAdM,CA7BgB;EA6CzBG,OAAO,EAAE;AA7CgB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}