{"ast":null,"code":"import { mapState, mapGetters } from 'vuex'; // import Datepicker from 'vuejs-datepicker';\n\nexport default {\n  components: {// Datepicker\n  },\n\n  data() {\n    const times = [];\n\n    for (let i = 1; i <= 24; i++) {\n      times.push(i + ':00');\n    }\n\n    return {\n      times,\n      event: this.createFreshEventObject()\n    };\n  },\n\n  methods: {\n    createFreshEventObject() {\n      const user = this.$store.state.user;\n      const id = Math.floor(Math.random() * 10000000);\n      return {\n        id: id,\n        user: user,\n        categories: '',\n        organizer: '',\n        title: '',\n        description: '',\n        location: '',\n        date: '',\n        time: '',\n        attendees: []\n      };\n    }\n\n  },\n  computed: { ...mapGetters(['getEventById']),\n    ...mapState(['user', 'categories'])\n  }\n};","map":{"version":3,"mappings":"AA6CA,SAASA,QAAT,EAAkBC,UAAlB,QAAoC,MAApC,C,CACA;;AAEA,eAAe;EACbC,UAAU,EAAC,CACT;EADS,CADE;;EAIbC,IAAI,GAAE;IACJ,MAAMC,KAAI,GAAI,EAAd;;IACA,KAAI,IAAIC,IAAI,CAAZ,EAAeA,KAAK,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MAC3BD,KAAK,CAACE,IAAN,CAAWD,IAAI,KAAf;IACF;;IACA,OAAO;MACLD,KADK;MAELG,KAAK,EAAE,KAAKC,sBAAL;IAFF,CAAP;EAID,CAbY;;EAcbC,OAAO,EAAE;IACPD,sBAAsB,GAAG;MACvB,MAAME,IAAG,GAAI,KAAKC,MAAL,CAAYC,KAAZ,CAAkBF,IAA/B;MACA,MAAMG,EAAC,GAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,CAAX;MACA,OAAO;QACLH,EAAE,EAAEA,EADC;QAELH,IAAI,EAAEA,IAFD;QAGLO,UAAU,EAAE,EAHP;QAILC,SAAS,EAAE,EAJN;QAKLC,KAAK,EAAE,EALF;QAMLC,WAAW,EAAE,EANR;QAOLC,QAAQ,EAAE,EAPL;QAQLC,IAAI,EAAE,EARD;QASLC,IAAI,EAAE,EATD;QAULC,SAAS,EAAE;MAVN,CAAP;IAYF;;EAhBO,CAdI;EAgCbC,QAAQ,EAAE,EACR,GAAGxB,UAAU,CAAC,CAAC,cAAD,CAAD,CADL;IAER,GAAGD,QAAQ,CAAC,CAAC,MAAD,EAAQ,YAAR,CAAD;EAFH;AAhCG,CAAf","names":["mapState","mapGetters","components","data","times","i","push","event","createFreshEventObject","methods","user","$store","state","id","Math","floor","random","categories","organizer","title","description","location","date","time","attendees","computed"],"sourceRoot":"","sources":["/Users/asmitnepali/Documents/projects/personal/real-world-vue/src/views/EventCreate.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Create an Event</h1>\n    <form @submit.prevent=\"createEvent\">\n      <label>Select a category</label>\n      <select v-model=\"event.category\">\n        <option v-for=\"cat in categories\" :key=\"cat\">{{ cat }}</option>\n      </select>\n\n      <h3>Name & describe your event</h3>\n      <div class=\"field\">\n        <label>Title</label>\n        <input v-model=\"event.title\" type=\"text\" placeholder=\"Add an event title\"/>\n      </div>\n\n      <div class=\"field\">\n        <label>Description</label>\n        <input v-model=\"event.description\" type=\"text\" placeholder=\"Add a description\"/>\n      </div>\n\n      <h3>Where is your event?</h3>\n      <div class=\"field\">\n        <label>Location</label>\n        <input v-model=\"event.location\" type=\"text\" placeholder=\"Add a location\"/>\n      </div>\n\n      <h3>When is your event?</h3>\n\n      <div class=\"field\">\n        <label>Date</label>\n        <datepicker v-model=\"event.date\" placeholder=\"Select a date\"/>\n      </div>\n\n      <div class=\"field\">\n        <label>Select a time</label>\n        <select v-model=\"event.time\">\n          <option v-for=\"time in times\" :key=\"time\">{{ time }}</option>\n        </select>\n      </div>\n\n      <input type=\"submit\" class=\"button -fill-gradient\" value=\"Submit\"/>\n    </form>\n  </div>\n</template>\n<script>\nimport { mapState,mapGetters } from 'vuex';\n// import Datepicker from 'vuejs-datepicker';\n\nexport default {\n  components:{\n    // Datepicker\n  },\n  data(){\n    const times = [];\n    for(let i = 1; i <= 24; i++) {\n      times.push(i + ':00')\n    } \n    return {\n      times,\n      event: this.createFreshEventObject()\n    }\n  },\n  methods: {\n    createFreshEventObject() {\n      const user = this.$store.state.user\n      const id = Math.floor(Math.random() * 10000000)\n      return {\n        id: id,\n        user: user,\n        categories: '',\n        organizer: '',\n        title: '',\n        description: '',\n        location: '',\n        date: '',\n        time: '',\n        attendees: []\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['getEventById']),\n    ...mapState(['user','categories'])\n  }\n}\n</script>\n\n<style scoped>\n.field {\n  margin-bottom: 24px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}