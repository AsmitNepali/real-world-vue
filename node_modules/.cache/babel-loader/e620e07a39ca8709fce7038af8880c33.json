{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \" Event Listing \", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"Prev Page\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" | \");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"Next Page\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_EventCard = _resolveComponent(\"EventCard\");\n\n  const _component_BaseIcon = _resolveComponent(\"BaseIcon\");\n\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.events, event => {\n    return _openBlock(), _createBlock(_component_EventCard, {\n      key: event.id,\n      event: event\n    }, null, 8\n    /* PROPS */\n    , [\"event\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createVNode(_component_BaseIcon), $options.page != 1 ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createVNode(_component_router_link, {\n    to: {\n      name: 'event-list',\n      query: {\n        page: $options.page - 1\n      }\n    },\n    rel: \"prev\"\n  }, {\n    default: _withCtx(() => [_hoisted_2]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"to\"]), _hoisted_3], 64\n  /* STABLE_FRAGMENT */\n  )) : _createCommentVNode(\"v-if\", true), this.$store.state.eventsTotal > $options.page * 3 ? (_openBlock(), _createBlock(_component_router_link, {\n    key: 1,\n    to: {\n      name: 'event-list',\n      query: {\n        page: $options.page + 1\n      }\n    },\n    rel: \"prev\"\n  }, {\n    default: _withCtx(() => [_hoisted_4]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"to\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAAwB,IAAxB,EAAwB,IAAxB,EAAI,iBAAJ,EAAmB;AAAA;AAAnB;;iDAI8E;;iDAAuB;;iDAIvB;;;;;;;;;uBAThFC,oBAWM,KAXN,EAWM,IAXN,EAWM,CAVJC,UAUI,qBATJD,oBAAmEE,SAAnE,EAAmE,IAAnE,EAAmEC,YAAxCC,WAAwC,EAAjDC,KAAe,IAAV;yBAAvBC,aAAmEC,oBAAnE,EAAmE;MAA/BC,GAAG,EAAEH,KAAK,CAACI,EAAoB;MAAfJ,KAAK,EAAEA;IAAQ,CAAnE;;IAAA;GAAmE,CAAnE;;EAAA,CASI,GARJK,aAAYC,mBAAZ,CAQI,EAPYC,iBAAI,mBAApBZ,oBAGWE,SAHX,EAGW;IAAAM;EAAA,CAHX,EAGW,CAFTE,aAAmGG,sBAAnG,EAAmG;IAArFC,EAAE;MAAAC;MAAAC;QAAAC,MAAoCL,gBAAI;MAAxC;IAAA,CAAmF;IAAlCM,GAAG,EAAC;EAA8B,CAAnG;sBAA4E,MAAS;;;;GAArF;;EAAA,SAES,aAHX;;EAAA,sCAOI,OAHiBC,OAAOC,MAAMC,cAAcT,gBAAI,mBAClDN,aAAmGO,sBAAnG,EAAmG;UAAA;IAArFC,EAAE;MAAAC;MAAAC;QAAAC,MAAoCL,gBAAI;MAAxC;IAAA,CAAmF;IAAlCM,GAAG,EAAC;EAA8B,CAAnG;sBAA4E,MAAS;;;;GAArF;;EAAA,8CAEE,CAXN","names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","_ctx","event","_createBlock","_component_EventCard","key","id","_createVNode","_component_BaseIcon","$options","_component_router_link","to","name","query","page","rel","$store","state","eventsTotal"],"sourceRoot":"","sources":["/Users/asmitnepali/Documents/projects/personal/real-world-vue/src/views/EventList.vue"],"sourcesContent":["<template>\n  <div>\n    <h1> Event Listing </h1>\n    <EventCard v-for=\"event in events\" :key=\"event.id\" :event=\"event\"/>\n    <BaseIcon />\n    <template v-if=\"page != 1\">\n      <router-link :to=\"{name: 'event-list', query:{page: page - 1} }\" rel=\"prev\">Prev Page</router-link>  \n      |\n    </template>\n    <template v-if=\"this.$store.state.eventsTotal > page*3\">\n      <router-link :to=\"{name: 'event-list', query:{page: page + 1} }\" rel=\"prev\">Next Page</router-link>  \n    </template>    \n  </div>\n</template>\n\n<script>\nimport EventCard from \"@/components/EventCard.vue\";\nimport { mapState } from 'vuex';\n\n\nexport default {\n  components: {\n    EventCard\n  },\n\n  created() {\n    this.$store.dispatch('fetchEvents', {\n      perPage:3,\n      page: this.page\n    })\n  },\n  computed: {\n    page(){\n      return parseInt(this.$route.query.page) || 1\n    }, \n    ...mapState(['events'])\n  }\n};\n</script>"]},"metadata":{},"sourceType":"module"}