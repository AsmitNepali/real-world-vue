{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    placeholder: \"What's your email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"What's your name\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.name = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.name]]), _hoisted_1, _ctx.v$.email.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString(_ctx.v$.email.email.$message), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), _ctx.v$.email.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString(_ctx.v$.email.email.$message), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;gCAIQA,oBAAqC,QAArC,EAAqC;EAA7BC,IAAI,EAAC;AAAwB,CAArC,EAAsB,QAAtB,EAA4B;AAAA;AAA5B;;;;;;;;;uBAHJC,oBAMM,KANN,EAMM,IANN,EAMM,iBALFF,oBAAoE,OAApE,EAAoE;IAA7DC,IAAI,EAAC,OAAwD;IAAhDE,WAAW,EAAC,mBAAoC;+DAAPC,cAAKC;EAAE,CAApE;;EAAA,kBAA6DD,cAK3D,kBAJFJ,oBAAiE,OAAjE,EAAiE;IAA1DC,IAAI,EAAC,MAAqD;IAA9CE,WAAW,EAAC,kBAAkC;+DAANC,aAAIC;EAAE,CAAjE;;EAAA,kBAA2DD,aAIzD,EAHFE,UAGE,EAFOC,QAAGC,KAAH,CAASC,0BAAlBP,oBAA2D,GAA3D,EAA2DQ,UAA3D,EAA2DC,iBAA7BJ,QAAGC,KAAH,CAASA,KAAT,CAAeI,QAAc,CAA3D,EAAqD;EAAA;EAArD,sCAEE,EADOL,QAAGC,KAAH,CAASK,QAAT,CAAkBJ,0BAA3BP,oBAAoE,GAApE,EAAoEY,UAApE,EAAoEH,iBAA7BJ,QAAGC,KAAH,CAASA,KAAT,CAAeI,QAAc,CAApE,EAA8D;EAAA;EAA9D,sCACE,CANN","names":["_createElementVNode","type","_createElementBlock","placeholder","$data","$event","_hoisted_1","_ctx","email","$invalid","_hoisted_2","_toDisplayString","$message","required","_hoisted_3"],"sourceRoot":"","sources":["/Users/asmitnepali/Documents/projects/personal/real-world-vue/src/views/ExampleView.vue"],"sourcesContent":["<template>\n    <div>\n        <input type=\"email\" placeholder=\"What's your email\" v-model=\"email\">\n        <input type=\"text\" placeholder=\"What's your name\" v-model=\"name\">\n        <button type=\"submit\">Submit</button>\n        <p v-if=\"v$.email.$invalid\">{{v$.email.email.$message}}</p>\n        <p v-if=\"v$.email.required.$invalid\">{{v$.email.email.$message}}</p>\n    </div>\n</template>\n<script>\n    import { useVuelidate } from '@vuelidate/core'\n    import { required, email } from '@vuelidate/validators'\n    export default{\n        setup: () => ({ v$: useVuelidate() }),\n        data() {\n            return {\n                email: null,\n                name: null\n            }\n        }, \n        validations() {\n            return {\n                email:{\n                    required,\n                    email\n                },\n                name: {\n                    required\n                }\n\n            }\n        }\n    }\n</script>"]},"metadata":{},"sourceType":"module"}