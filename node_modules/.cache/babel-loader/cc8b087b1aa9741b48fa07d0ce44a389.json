{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    placeholder: \"What's your email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.email]]), _hoisted_1, _ctx.v$.email.email ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"Please Enter Valid eamil.\")) : _createCommentVNode(\"v-if\", true), _ctx.v$.email.required.$invalid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"Email is required.\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;gCAGQA,oBAAqC,QAArC,EAAqC;EAA7BC,IAAI,EAAC;AAAwB,CAArC,EAAsB,QAAtB,EAA4B;AAAA;AAA5B;;;;;;;;;uBAFJC,oBAKM,KALN,EAKM,IALN,EAKM,iBAJFF,oBAAoE,OAApE,EAAoE;IAA7DC,IAAI,EAAC,OAAwD;IAAhDE,WAAW,EAAC,mBAAoC;+DAAPC,cAAKC;EAAE,CAApE;;EAAA,kBAA6DD,cAI3D,EAHFE,UAGE,EAFOC,QAAGC,KAAH,CAASA,uBAAlBN,oBAAsD,GAAtD,EAAsDO,UAAtD,EAAyB,2BAAzB,sCAEE,EADOF,QAAGC,KAAH,CAASE,QAAT,CAAkBC,0BAA3BT,oBAA2D,GAA3D,EAA2DU,UAA3D,EAAqC,oBAArC,sCACE,CALN","names":["_createElementVNode","type","_createElementBlock","placeholder","$data","$event","_hoisted_1","_ctx","email","_hoisted_2","required","$invalid","_hoisted_3"],"sourceRoot":"","sources":["/Users/asmitnepali/Documents/projects/personal/real-world-vue/src/views/ExampleView.vue"],"sourcesContent":["<template>\n    <div>\n        <input type=\"email\" placeholder=\"What's your email\" v-model=\"email\">\n        <button type=\"submit\">Submit</button>\n        <p v-if=\"v$.email.email\">Please Enter Valid eamil.</p>\n        <p v-if=\"v$.email.required.$invalid\">Email is required.</p>\n    </div>\n</template>\n<script>\n    import { useVuelidate } from '@vuelidate/core'\n    import { required, email } from '@vuelidate/validators'\n    export default{\n        setup: () => ({ v$: useVuelidate() }),\n        data() {\n            return {\n                email: null,\n                name: null\n            }\n        }, \n        validations() {\n            return {\n                email:{\n                    required,\n                    email\n                },\n                name: {\n                    required\n                }\n\n            }\n        }\n    }\n</script>"]},"metadata":{},"sourceType":"module"}