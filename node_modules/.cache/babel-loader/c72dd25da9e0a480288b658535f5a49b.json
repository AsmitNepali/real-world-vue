{"ast":null,"code":"import EventService from '@/services/EventService';\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    user: {\n      id: 'abc123',\n      name: 'Asmit Nepali'\n    },\n    categories: ['sustanability', 'nature', 'animal welfare', 'housing', 'education', 'food', 'community'],\n    events: [],\n    eventsTotal: 0,\n    event: {}\n  },\n  getters: {\n    getEventById: state => id => {\n      console.log(id);\n      return state.events.filter(event => event.id === id);\n    }\n  },\n  mutations: {\n    ADD_EVENT(state, event) {\n      state.events.push(event);\n    },\n\n    SET_EVENTS(state, events) {\n      state.events = events;\n    },\n\n    SET_EVENT(state, event) {\n      state.event = event;\n    },\n\n    SET_TOTAL_EVENTS(state, eventsTotal) {\n      state.eventsTotal = eventsTotal;\n    }\n\n  },\n  actions: {\n    createEvent({\n      commit\n    }, event) {\n      return EventService.postEvent(event).then(() => {\n        commit('ADD_EVENT', event);\n      });\n    },\n\n    fetchEvents({\n      commit\n    }, {\n      perPage,\n      page\n    }) {\n      EventService.getEvents(perPage, page).then(response => {\n        commit('SET_TOTAL_EVENTS', parseInt(response.headers['x-total-count']));\n        commit('SET_EVENTS', response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    fetchEvent({\n      commit,\n      getters\n    }, id) {\n      var event = getters.getEventById(id);\n      console.log(event);\n\n      if (event) {\n        commit('SET_EVENT', event);\n      } else {\n        EventService.getEvent(id).then(response => {\n          commit('SET_EVENT', response.data);\n        }).catch(error => {\n          console.log('There was an error.', error.response);\n        });\n      }\n    }\n\n  },\n  modules: {}\n});","map":{"version":3,"names":["EventService","createStore","state","user","id","name","categories","events","eventsTotal","event","getters","getEventById","console","log","filter","mutations","ADD_EVENT","push","SET_EVENTS","SET_EVENT","SET_TOTAL_EVENTS","actions","createEvent","commit","postEvent","then","fetchEvents","perPage","page","getEvents","response","parseInt","headers","data","catch","error","fetchEvent","getEvent","modules"],"sources":["/Users/asmitnepali/Documents/projects/personal/real-world-vue/src/store/index.js"],"sourcesContent":["import EventService from '@/services/EventService'\nimport { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    user:{id:'abc123', name:'Asmit Nepali'},\n    categories:[\n      'sustanability',\n      'nature',\n      'animal welfare',\n      'housing',\n      'education',\n      'food',\n      'community'\n    ],\n    events: [],\n    eventsTotal:0,\n    event:{}\n  },\n\n  getters: {\n    getEventById: state => id => {\n      console.log(id);\n      return state.events.filter(event => event.id === id)\n    },\n    \n  },\n\n  mutations: {\n    ADD_EVENT (state,event){\n      state.events.push(event)\n    },\n    SET_EVENTS(state, events) {\n      state.events  = events\n    },\n    SET_EVENT(state,event){\n      state.event = event\n    },\n    SET_TOTAL_EVENTS(state,eventsTotal) {\n      state.eventsTotal = eventsTotal\n    }\n  },\n\n  actions: {\n    createEvent({commit}, event) {\n      return EventService.postEvent(event).then(()=>{\n      commit('ADD_EVENT', event)\n      })\n    }, \n\n    fetchEvents({commit} ,{perPage, page}) {\n      EventService.getEvents(perPage, page)\n      .then(response => {\n        commit('SET_TOTAL_EVENTS', parseInt(response.headers['x-total-count']))\n        commit('SET_EVENTS', response.data)\n      })\n      .catch(error => {\n        console.log(error);\n      })\n    },\n\n    fetchEvent({commit, getters}, id) {\n      var event = getters.getEventById(id)\n      console.log(event)\n      if(event) {\n        commit('SET_EVENT', event)\n      }\n      else {\n      EventService.getEvent(id)\n      .then(response => {\n        commit('SET_EVENT', response.data)\n      })\n      .catch(error => {\n        console.log('There was an error.', error.response);\n      })\n    }\n    }\n  }, \n  modules: {\n  }\n})\n"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,yBAAzB;AACA,SAASC,WAAT,QAA4B,MAA5B;AAEA,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,IAAI,EAAC;MAACC,EAAE,EAAC,QAAJ;MAAcC,IAAI,EAAC;IAAnB,CADA;IAELC,UAAU,EAAC,CACT,eADS,EAET,QAFS,EAGT,gBAHS,EAIT,SAJS,EAKT,WALS,EAMT,MANS,EAOT,WAPS,CAFN;IAWLC,MAAM,EAAE,EAXH;IAYLC,WAAW,EAAC,CAZP;IAaLC,KAAK,EAAC;EAbD,CADkB;EAiBzBC,OAAO,EAAE;IACPC,YAAY,EAAET,KAAK,IAAIE,EAAE,IAAI;MAC3BQ,OAAO,CAACC,GAAR,CAAYT,EAAZ;MACA,OAAOF,KAAK,CAACK,MAAN,CAAaO,MAAb,CAAoBL,KAAK,IAAIA,KAAK,CAACL,EAAN,KAAaA,EAA1C,CAAP;IACD;EAJM,CAjBgB;EAyBzBW,SAAS,EAAE;IACTC,SAAS,CAAEd,KAAF,EAAQO,KAAR,EAAc;MACrBP,KAAK,CAACK,MAAN,CAAaU,IAAb,CAAkBR,KAAlB;IACD,CAHQ;;IAITS,UAAU,CAAChB,KAAD,EAAQK,MAAR,EAAgB;MACxBL,KAAK,CAACK,MAAN,GAAgBA,MAAhB;IACD,CANQ;;IAOTY,SAAS,CAACjB,KAAD,EAAOO,KAAP,EAAa;MACpBP,KAAK,CAACO,KAAN,GAAcA,KAAd;IACD,CATQ;;IAUTW,gBAAgB,CAAClB,KAAD,EAAOM,WAAP,EAAoB;MAClCN,KAAK,CAACM,WAAN,GAAoBA,WAApB;IACD;;EAZQ,CAzBc;EAwCzBa,OAAO,EAAE;IACPC,WAAW,CAAC;MAACC;IAAD,CAAD,EAAWd,KAAX,EAAkB;MAC3B,OAAOT,YAAY,CAACwB,SAAb,CAAuBf,KAAvB,EAA8BgB,IAA9B,CAAmC,MAAI;QAC9CF,MAAM,CAAC,WAAD,EAAcd,KAAd,CAAN;MACC,CAFM,CAAP;IAGD,CALM;;IAOPiB,WAAW,CAAC;MAACH;IAAD,CAAD,EAAW;MAACI,OAAD;MAAUC;IAAV,CAAX,EAA4B;MACrC5B,YAAY,CAAC6B,SAAb,CAAuBF,OAAvB,EAAgCC,IAAhC,EACCH,IADD,CACMK,QAAQ,IAAI;QAChBP,MAAM,CAAC,kBAAD,EAAqBQ,QAAQ,CAACD,QAAQ,CAACE,OAAT,CAAiB,eAAjB,CAAD,CAA7B,CAAN;QACAT,MAAM,CAAC,YAAD,EAAeO,QAAQ,CAACG,IAAxB,CAAN;MACD,CAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;QACdvB,OAAO,CAACC,GAAR,CAAYsB,KAAZ;MACD,CAPD;IAQD,CAhBM;;IAkBPC,UAAU,CAAC;MAACb,MAAD;MAASb;IAAT,CAAD,EAAoBN,EAApB,EAAwB;MAChC,IAAIK,KAAK,GAAGC,OAAO,CAACC,YAAR,CAAqBP,EAArB,CAAZ;MACAQ,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;MACA,IAAGA,KAAH,EAAU;QACRc,MAAM,CAAC,WAAD,EAAcd,KAAd,CAAN;MACD,CAFD,MAGK;QACLT,YAAY,CAACqC,QAAb,CAAsBjC,EAAtB,EACCqB,IADD,CACMK,QAAQ,IAAI;UAChBP,MAAM,CAAC,WAAD,EAAcO,QAAQ,CAACG,IAAvB,CAAN;QACD,CAHD,EAICC,KAJD,CAIOC,KAAK,IAAI;UACdvB,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCsB,KAAK,CAACL,QAAzC;QACD,CAND;MAOD;IACA;;EAjCM,CAxCgB;EA2EzBQ,OAAO,EAAE;AA3EgB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}