{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"h1\", null, \" Show Event #\" + _toDisplayString($data.event.title), 1\n  /* TEXT */\n  );\n}","map":{"version":3,"mappings":";;uBACEA,oBAAwC,IAAxC,EAAwC,IAAxC,EAAI,kBAAaC,iBAAGC,YAAMC,KAAT,CAAjB,EAA+B;EAAA;EAA/B","names":["_createElementBlock","_toDisplayString","$data","title"],"sourceRoot":"","sources":["/var/www/personal/real-world-vue/src/views/EventShow.vue"],"sourcesContent":["<template>\n  <h1> Show Event #{{ event.title }} </h1>\n</template>\n\n<script>\nimport EventService from \"@/services/EventService\";\n\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      event: {}\n    }\n  },\n  created() {\n    EventService.getEvent(this.id)\n      .then(response => {\n        this.event = response.data\n      })\n      .catch(error => {\n        console.log('There was an error.', error.response);\n      })\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module"}