{"ast":null,"code":"import { useVuelidate } from '@vuelidate/core';\nimport { required, email } from '@vuelidate/validators';\nexport default {\n  setup: () => ({\n    v$: useVuelidate()\n  }),\n\n  data() {\n    return {\n      email: null\n    };\n  },\n\n  validations() {\n    return {\n      email: {\n        required,\n        email\n      }\n    };\n  },\n\n  methods: {\n    submit() {\n      this.v$.$touch();\n      const result = this.v$.$validate();\n\n      if (!result) {\n        console.log(\"Form Submitted\");\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAcI,SAASA,YAAT,QAA6B,iBAA7B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,uBAAhC;AACA,eAAc;EACVC,KAAK,EAAE,OAAO;IAAEC,EAAE,EAAEJ,YAAY;EAAlB,CAAP,CADG;;EAEVK,IAAI,GAAG;IACH,OAAO;MACHH,KAAK,EAAE;IADJ,CAAP;EAIH,CAPS;;EAQVI,WAAW,GAAG;IACV,OAAO;MACHJ,KAAK,EAAC;QACFD,QADE;QAEFC;MAFE;IADH,CAAP;EAOH,CAhBS;;EAiBVK,OAAO,EAAC;IACJC,MAAM,GAAE;MACJ,KAAKJ,EAAL,CAAQK,MAAR;MACA,MAAMC,MAAK,GAAI,KAAKN,EAAL,CAAQO,SAAR,EAAf;;MACA,IAAG,CAACD,MAAJ,EAAY;QACRE,OAAO,CAACC,GAAR,CAAY,gBAAZ;MACJ;IACJ;;EAPI;AAjBE,CAAd","names":["useVuelidate","required","email","setup","v$","data","validations","methods","submit","$touch","result","$validate","console","log"],"sourceRoot":"","sources":["/Users/asmitnepali/Documents/projects/personal/real-world-vue/src/views/ExampleView.vue"],"sourcesContent":["<template>\n    <form @submit.prevent = \"submit\">\n        <input type=\"email\" placeholder=\"What's your email\" \n        v-model=\"email\" \n        :class=\"{error: v$.email.$error}\"\n        @blur=\"v$.email.$touch()\">\n        <button type=\"submit\">Submit</button>\n        <div v-if=\"v$.email.$error\">\n            <p v-if=\"v$.email.email.$invalid\" class=\"errorMessage\">Please Enter Valid eamil.</p>\n            <p v-if=\"v$.email.required.$invalid\">Email is required.</p>\n        </div>\n    </form>\n</template>\n<script>\n    import { useVuelidate } from '@vuelidate/core'\n    import { required, email } from '@vuelidate/validators'\n    export default{\n        setup: () => ({ v$: useVuelidate() }),\n        data() {\n            return {\n                email: null,\n               \n            }\n        }, \n        validations() {\n            return {\n                email:{\n                    required,\n                    email\n                }\n\n            }\n        },\n        methods:{\n            submit(){\n                this.v$.$touch()\n                const result = this.v$.$validate()\n                if(!result) {\n                    console.log(\"Form Submitted\");\n                }\n            }\n        }\n    }\n</script>"]},"metadata":{},"sourceType":"module"}