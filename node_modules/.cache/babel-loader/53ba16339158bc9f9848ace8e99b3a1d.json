{"ast":null,"code":"import EventCard from \"@/components/EventCard.vue\";\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    EventCard\n  },\n\n  created() {\n    this.$store.dispatch('fetchEvents', {\n      perPage: 3,\n      page: this.page\n    });\n  },\n\n  computed: {\n    page() {\n      return parseInt(this.$route.query.page) || 1;\n    },\n\n    isLastPage() {\n      return this.eventsTotal > this.page * 3;\n    },\n\n    ...mapState(['user', 'events', 'eventsTotal'])\n  }\n};","map":{"version":3,"mappings":"AAgBA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,SAASC,QAAT,QAAyB,MAAzB;AAGA,eAAe;EACbC,UAAU,EAAE;IACVF;EADU,CADC;;EAKbG,OAAO,GAAG;IACR,KAAKC,MAAL,CAAYC,QAAZ,CAAqB,aAArB,EAAoC;MAClCC,OAAO,EAAC,CAD0B;MAElCC,IAAI,EAAE,KAAKA;IAFuB,CAApC;EAID,CAVY;;EAWbC,QAAQ,EAAE;IACRD,IAAI,GAAE;MACJ,OAAOE,QAAQ,CAAC,KAAKC,MAAL,CAAYC,KAAZ,CAAkBJ,IAAnB,CAAR,IAAoC,CAA3C;IACD,CAHO;;IAIRK,UAAU,GAAG;MACX,OAAO,KAAKC,WAAL,GAAmB,KAAKN,IAAL,GAAU,CAApC;IACD,CANO;;IAOR,GAAGN,QAAQ,CAAC,CAAC,MAAD,EAAQ,QAAR,EAAiB,aAAjB,CAAD;EAPH;AAXG,CAAf","names":["EventCard","mapState","components","created","$store","dispatch","perPage","page","computed","parseInt","$route","query","isLastPage","eventsTotal"],"sourceRoot":"","sources":["/Users/asmitnepali/Documents/projects/personal/real-world-vue/src/views/EventList.vue"],"sourcesContent":["<template>\n  <div>\n    <h1> Event for {{ user.}} </h1>\n    <EventCard v-for=\"event in events\" :key=\"event.id\" :event=\"event\"/>\n    <BaseIcon />\n    <template v-if=\"page != 1\">\n      <router-link :to=\"{name: 'event-list', query:{page: page - 1} }\" rel=\"prev\">Prev Page</router-link>  \n      |\n    </template>\n    <template v-if = \"isLastPage\">\n      <router-link :to=\"{name: 'event-list', query:{page: page + 1} }\" rel=\"prev\">Next Page</router-link>  \n    </template>    \n  </div>\n</template>\n\n<script>\nimport EventCard from \"@/components/EventCard.vue\";\nimport { mapState } from 'vuex';\n\n\nexport default {\n  components: {\n    EventCard\n  },\n\n  created() {\n    this.$store.dispatch('fetchEvents', {\n      perPage:3,\n      page: this.page\n    })\n  },\n  computed: {\n    page(){\n      return parseInt(this.$route.query.page) || 1\n    }, \n    isLastPage() {\n      return this.eventsTotal > this.page*3\n    },\n    ...mapState(['user','events','eventsTotal'])\n  }\n};\n</script>"]},"metadata":{},"sourceType":"module"}