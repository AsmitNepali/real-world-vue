{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"notification-bar\", _ctx.notificationTypeClass])\n  }, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.notifications.message), 1\n  /* TEXT */\n  )], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;uBACIA,oBAEM,KAFN,EAEM;IAFDC,KAAK,mBAAC,kBAAD,EAA4BC,0BAA5B;EAEJ,CAFN,GACIC,oBAAgC,GAAhC,EAAgC,IAAhC,EAAgCC,iBAA3BF,mBAAcG,OAAa,CAAhC,EAA0B;EAAA;EAA1B,EADJ;;EAAA","names":["_createElementBlock","class","_ctx","_createElementVNode","_toDisplayString","message"],"sourceRoot":"","sources":["/Users/asmitnepali/Documents/projects/personal/real-world-vue/src/components/NotificationBar.vue"],"sourcesContent":["<template>\n    <div class=\"notification-bar\" :class=\"notificationTypeClass\">\n        <p>{{notifications.message}}</p>\n    </div>\n</template>\n<script>\nimport { mapActions } from 'vuex'\nexport default {\n    data() {\n        return {\n            timeoute: null\n        }\n    },\n    mounted() {\n        this.timeoute = setTimeout(() => this.remove(this.notification), 5000)\n    }\n    props: {\n        notifications: {\n            type: Object,\n            required: true\n        }\n        },\n        computed: { \n            notificationTypeClass() {\n                return `-text-${this.notification.type}`\n            }\n        },\n        methods: mapActions('notification',['remove'])\n}\n</script>\n<style scoped>\n.notification-bar {\n    margin: 1em 0 1em;\n}\n</style>"]},"metadata":{},"sourceType":"module"}