{"ast":null,"code":"import EventService from \"@/services/EventService\";\nexport default {\n  props: ['id'],\n\n  data() {\n    return {\n      event: {}\n    };\n  },\n\n  created() {\n    EventService.getEvent(this.id).then(response => {\n      this.event = response.data;\n    }).catch(error => {\n      console.log('There was an error.', error.response);\n    });\n  }\n\n};","map":{"version":3,"mappings":"AA4BA,OAAOA,YAAP,MAAyB,yBAAzB;AAEA,eAAe;EACbC,KAAK,EAAE,CAAC,IAAD,CADM;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE;IADF,CAAP;EAGD,CANY;;EAObC,OAAO,GAAG;IACRJ,YAAY,CAACK,QAAb,CAAsB,KAAKC,EAA3B,EACGC,IADH,CACQC,QAAO,IAAK;MAChB,KAAKL,KAAL,GAAaK,QAAQ,CAACN,IAAtB;IACD,CAHH,EAIGO,KAJH,CAISC,KAAI,IAAK;MACdC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACF,QAAzC;IACD,CANH;EAOF;;AAfa,CAAf","names":["EventService","props","data","event","created","getEvent","id","then","response","catch","error","console","log"],"sourceRoot":"","sources":["/var/www/personal/real-world-vue/src/views/EventShow.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"event-header\">\n      <span class=\"eyebrow\">@{{ event.time }} on {{ event.date }}</span>\n      <h1 class=\"title\">{{ event.title }}</h1>\n      <h5>Organized by {{ event.organizer ? event.organizer.name : '' }}</h5>\n      <h5>Category: {{ event.category }}</h5>\n    </div>\n\n    <BaseIcon name=\"map\"><h2>Location</h2></BaseIcon>\n\n    <address>{{ event.location }}</address>\n\n    <h2>Event details</h2>\n    <p>{{ event.description }}</p>\n\n    <h2>Attendees\n      <span class=\"badge -fill-gradient\">{{ event.attendees ? event.attendees.length : 0 }}</span>\n    </h2>\n    <ul class=\"list-group\">\n      <li v-for=\"(attendee, index) in event.attendees\" :key=\"index\" class=\"list-item\">\n        <b>{{ attendee.name }}</b>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport EventService from \"@/services/EventService\";\n\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      event: {}\n    }\n  },\n  created() {\n    EventService.getEvent(this.id)\n      .then(response => {\n        this.event = response.data\n      })\n      .catch(error => {\n        console.log('There was an error.', error.response);\n      })\n  }\n}\n</script>\n<style scoped>\n.location {\n  margin-bottom: 0;\n}\n.location > .icon {\n  margin-left: 10px;\n}\n.event-header > .title {\n  margin: 0;\n}\n.list-group {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n.list-group > .list-item {\n  padding: 1em 0;\n  border-bottom: solid 1px #e5e5e5;\n}\n</style>"]},"metadata":{},"sourceType":"module"}