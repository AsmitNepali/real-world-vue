{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Prev Page\");\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" | \");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Next Page\");\n\nexport function render(_ctx, _cache) {\n  const _component_EventCard = _resolveComponent(\"EventCard\");\n\n  const _component_BaseIcon = _resolveComponent(\"BaseIcon\");\n\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, \" Event for \" + _toDisplayString(_ctx.user.user.name), 1\n  /* TEXT */\n  ), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.event.events, event => {\n    return _openBlock(), _createBlock(_component_EventCard, {\n      key: event.id,\n      event: event\n    }, null, 8\n    /* PROPS */\n    , [\"event\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createVNode(_component_BaseIcon), _ctx.page != 1 ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createVNode(_component_router_link, {\n    to: {\n      name: 'event-list',\n      query: {\n        page: _ctx.page - 1\n      }\n    },\n    rel: \"prev\"\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"to\"]), _hoisted_2], 64\n  /* STABLE_FRAGMENT */\n  )) : _createCommentVNode(\"v-if\", true), _ctx.isLastPage ? (_openBlock(), _createBlock(_component_router_link, {\n    key: 1,\n    to: {\n      name: 'event-list',\n      query: {\n        page: _ctx.page + 1\n      }\n    },\n    rel: \"prev\"\n  }, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"to\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;iDAMkF;;iDAAuB;;iDAIvB;;;;;;;;;uBAThFA,oBAWM,KAXN,EAWM,IAXN,EAWM,CAVJC,oBAAwC,IAAxC,EAAwC,IAAxC,EAAI,gBAAWC,iBAAGC,UAAKC,IAAL,CAAUC,IAAb,CAAf,EAAgC;EAAA;EAAhC,CAUI,qBATJL,oBAAyEM,SAAzE,EAAyE,IAAzE,EAAyEC,YAA9CJ,WAAMK,MAAwC,EAAvDC,KAAqB,IAAhB;yBAAvBC,aAAyEC,oBAAzE,EAAyE;MAA/BC,GAAG,EAAEH,KAAK,CAACI,EAAoB;MAAfJ,KAAK,EAAEA;IAAQ,CAAzE;;IAAA;GAAyE,CAAzE;;EAAA,CASI,GARJK,aAAYC,mBAAZ,CAQI,EAPYZ,aAAI,mBAApBH,oBAGWM,SAHX,EAGW;IAAAM;EAAA,CAHX,EAGW,CAFTE,aAAmGE,sBAAnG,EAAmG;IAArFC,EAAE;MAAAZ;MAAAa;QAAAC,MAAoChB,YAAI;MAAxC;IAAA,CAAmF;IAAlCiB,GAAG,EAAC;EAA8B,CAAnG;sBAA4E,MAAS;;;;GAArF;;EAAA,SAES,aAHX;;EAAA,sCAOI,EAHcjB,iCAChBO,aAAmGM,sBAAnG,EAAmG;UAAA;IAArFC,EAAE;MAAAZ;MAAAa;QAAAC,MAAoChB,YAAI;MAAxC;IAAA,CAAmF;IAAlCiB,GAAG,EAAC;EAA8B,CAAnG;sBAA4E,MAAS;;;;GAArF;;EAAA,8CAEE,CAXN","names":["_createElementBlock","_createElementVNode","_toDisplayString","_ctx","user","name","_Fragment","_renderList","events","event","_createBlock","_component_EventCard","key","id","_createVNode","_component_BaseIcon","_component_router_link","to","query","page","rel"],"sourceRoot":"","sources":["/Users/asmitnepali/Documents/projects/personal/real-world-vue/src/views/EventList.vue"],"sourcesContent":["<template>\n  <div>\n    <h1> Event for {{ user.user.name}} </h1>\n    <EventCard v-for=\"event in event.events\" :key=\"event.id\" :event=\"event\"/>\n    <BaseIcon />\n    <template v-if=\"page != 1\">\n      <router-link :to=\"{name: 'event-list', query:{page: page - 1} }\" rel=\"prev\">Prev Page</router-link>  \n      |\n    </template>\n    <template v-if = \"isLastPage\">\n      <router-link :to=\"{name: 'event-list', query:{page: page + 1} }\" rel=\"prev\">Next Page</router-link>  \n    </template>    \n  </div>\n</template>\n\n<script>\nimport EventCard from \"@/components/EventCard.vue\";\nimport { mapState } from 'vuex';\nimport store from '@/store';\n\nexport default {\n  components: {\n    EventCard\n  },\n\n  beforeRouteEnter(routeTo, routeFrom, next) {\n    const currentPage = \n\n  },\n\n  created() {\n    this.$store.dispatch('event/fetchEvents', {\n      perPage:3,\n      page: this.page\n    })\n  },\n  computed: {\n    isLastPage() {\n      return this.event.ventsTotal > this.page*3\n    },\n    ...mapState(['user','event'])\n  }\n};\n</script>"]},"metadata":{},"sourceType":"module"}