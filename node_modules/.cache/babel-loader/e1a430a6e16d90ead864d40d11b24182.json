{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, mergeProps as _mergeProps, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [$props.label ? (_openBlock(), _createElementBlock(\"label\", _hoisted_1, _toDisplayString($props.label), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"select\", _mergeProps({\n    onInput: _cache[0] || (_cache[0] = (...args) => _ctx.updateInput && _ctx.updateInput(...args))\n  }, _ctx.$attrs), [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.options, option => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: option\n    }, _toDisplayString(option), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 16\n  /* FULL_PROPS */\n  )]);\n}","map":{"version":3,"mappings":";;;;;uBACIA,oBAKM,KALN,EAKM,IALN,EAKM,CAJWC,8BAAbD,oBAAuC,OAAvC,EAAuCE,UAAvC,EAAuCC,iBAAhBF,YAAgB,CAAvC,EAA4B;EAAA;EAA5B,sCAIE,EAHFG,oBAES,QAFT,cAES;IAFAC,OAAK,yCAAEC,6CAAF;EAEL,CAFT,EAAqCA,WAArC,GAA2C,oBACvCN,oBAAqEO,SAArE,EAAqE,IAArE,EAAqEC,YAA5CP,cAA4C,EAAtDQ,MAAiB,IAAX;yBAArBT,oBAAqE,QAArE,EAAqE;MAAlCU,GAAG,EAAED;IAA6B,CAArE,EAA8CN,iBAAKM,MAAL,CAA9C,EAAyD;IAAA;IAAzD;GAAqE,CAArE;;EAAA,CADuC,EAA3C;;EAAA,CAGE,CALN","names":["_createElementBlock","$props","_hoisted_1","_toDisplayString","_createElementVNode","onInput","_ctx","_Fragment","_renderList","option","key"],"sourceRoot":"","sources":["/Users/asmitnepali/Documents/projects/personal/real-world-vue/src/components/BaseSelect.vue"],"sourcesContent":["<template>\n    <div>\n        <label v-if=\"label\">{{ label }}</label>\n        <select @input=\"updateInput\" v-bind=\"$attrs\">\n            <option v-for=\"option in options\" :key=\"option\">{{ option }}</option>\n        </select>\n    </div>\n</template>\n<script>\n    // Here modelValue and update:modelValue is default props and emit events for v-model\n    export default {\n        inheritAttrs:false,\n        props:{\n            options:{\n                type: Array,\n                rewuired: true\n            },\n            label:{\n                type: String,\n                default: ''\n            },\n            modelValue:[String, Number]\n        },\n        emits:['update:modelValue'],\n        methods: {\n            updateValue(event){\n                console.log(event.target.value)\n                this.$emit('update:modelValue', event.target.value)\n            }\n        }\n    }\n</script>"]},"metadata":{},"sourceType":"module"}