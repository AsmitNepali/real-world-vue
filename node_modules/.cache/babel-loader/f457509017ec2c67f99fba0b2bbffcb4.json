{"ast":null,"code":"import EventService from \"@/services/EventService\";\nexport const namespaced = true;\nexport const state = {\n  events: [],\n  eventsTotal: 0,\n  event: {},\n  perPage: 3\n};\nexport const getters = {\n  getEventById: state => id => {\n    return state.events.find(event => event.id === id);\n  }\n};\nexport const mutations = {\n  ADD_EVENT(state, event) {\n    state.events.push(event);\n  },\n\n  SET_EVENTS(state, events) {\n    state.events = events;\n  },\n\n  SET_EVENT(state, event) {\n    state.event = event;\n  },\n\n  SET_TOTAL_EVENTS(state, eventsTotal) {\n    state.eventsTotal = eventsTotal;\n  }\n\n};\nexport const actions = {\n  createEvent({\n    commit,\n    dispatch\n  }, event) {\n    return EventService.postEvent(event).then(() => {\n      commit('ADD_EVENT', event);\n      const notification = {\n        type: 'success',\n        message: 'Your event has been created'\n      };\n      dispatch('notification/add', notification, {\n        root: true\n      });\n    }).catch(error => {\n      const notification = {\n        type: 'error',\n        message: 'There was a problem creating your event:' + error.message\n      };\n      dispatch('notification/add', notification, {\n        root: true\n      });\n      throw error;\n    });\n  },\n\n  fetchEvents({\n    commit,\n    dispatch,\n    state\n  }, {\n    page\n  }) {\n    return EventService.getEvents(state.perPage, page).then(response => {\n      commit('SET_TOTAL_EVENTS', parseInt(response.headers['x-total-count']));\n      commit('SET_EVENTS', response.data);\n    }).catch(error => {\n      const notification = {\n        type: 'error',\n        message: 'There was a problem fetching events:' + error.message\n      };\n      dispatch('notification/add', notification, {\n        root: true\n      });\n    });\n  },\n\n  fetchEvent({\n    commit,\n    getters\n  }, id) {\n    var event = getters.getEventById(id);\n\n    if (event) {\n      commit('SET_EVENT', event);\n      return event;\n    } else {\n      return EventService.getEvent(id).then(response => {\n        commit('SET_EVENT', response.data);\n        return response.data;\n      });\n    }\n  }\n\n};","map":{"version":3,"names":["EventService","namespaced","state","events","eventsTotal","event","perPage","getters","getEventById","id","find","mutations","ADD_EVENT","push","SET_EVENTS","SET_EVENT","SET_TOTAL_EVENTS","actions","createEvent","commit","dispatch","postEvent","then","notification","type","message","root","catch","error","fetchEvents","page","getEvents","response","parseInt","headers","data","fetchEvent","getEvent"],"sources":["/Users/asmitnepali/Documents/projects/personal/real-world-vue/src/store/modules/event.js"],"sourcesContent":["import EventService from \"@/services/EventService\"\n\nexport const namespaced = true\n\n  export const state= {\n    events: [],\n    eventsTotal:0,\n    event:{},\n    perPage: 3\n  }\n\n  export const getters= {\n    getEventById: state => id => {\n      return state.events.find(event => event.id === id)\n    },\n    \n  }\n\n  export const mutations= {\n    ADD_EVENT (state,event){\n      state.events.push(event)\n    },\n    SET_EVENTS(state, events) {\n      state.events  = events\n    },\n    SET_EVENT(state,event){\n      state.event = event\n    },\n    SET_TOTAL_EVENTS(state,eventsTotal) {\n      state.eventsTotal = eventsTotal\n    }\n  }\n\n  export const actions= {\n    createEvent({commit, dispatch}, event) {\n      return EventService.postEvent(event).then(()=>{\n      commit('ADD_EVENT', event)\n      const notification  = {\n        type: 'success',\n        message: 'Your event has been created'\n    }\n    dispatch('notification/add', notification, {root:true})\n      }).catch(error => {\n        const notification  = {\n            type: 'error',\n            message: 'There was a problem creating your event:' + error.message\n        }\n        dispatch('notification/add', notification, {root:true})\n        throw error\n      })\n    }, \n\n    fetchEvents({commit, dispatch, state} ,{page}) {\n      return EventService.getEvents(state.perPage, page)\n      .then(response => {\n        commit('SET_TOTAL_EVENTS', parseInt(response.headers['x-total-count']))\n        commit('SET_EVENTS', response.data)\n      })\n      .catch(error => {\n        const notification  = {\n            type: 'error',\n            message: 'There was a problem fetching events:' + error.message\n        }\n        dispatch('notification/add', notification, {root:true})\n      })\n    },\n\n    fetchEvent({commit, getters}, id) {\n      var event = getters.getEventById(id)\n      if(event) {\n        commit('SET_EVENT', event)\n        return event\n      }\n      else {\n      return EventService.getEvent(id)\n      .then(response => {\n        commit('SET_EVENT', response.data)\n        return response.data\n      })\n    }\n    }\n  }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}